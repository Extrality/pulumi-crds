// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { NodeOverlayArgs } from "./nodeOverlay";
export type NodeOverlay = import("./nodeOverlay").NodeOverlay;
export const NodeOverlay: typeof import("./nodeOverlay").NodeOverlay = null as any;
utilities.lazyLoad(exports, ["NodeOverlay"], () => require("./nodeOverlay"));

export { NodeOverlayListArgs } from "./nodeOverlayList";
export type NodeOverlayList = import("./nodeOverlayList").NodeOverlayList;
export const NodeOverlayList: typeof import("./nodeOverlayList").NodeOverlayList = null as any;
utilities.lazyLoad(exports, ["NodeOverlayList"], () => require("./nodeOverlayList"));

export { NodeOverlayPatchArgs } from "./nodeOverlayPatch";
export type NodeOverlayPatch = import("./nodeOverlayPatch").NodeOverlayPatch;
export const NodeOverlayPatch: typeof import("./nodeOverlayPatch").NodeOverlayPatch = null as any;
utilities.lazyLoad(exports, ["NodeOverlayPatch"], () => require("./nodeOverlayPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:karpenter.sh/v1alpha1:NodeOverlay":
                return new NodeOverlay(name, <any>undefined, { urn })
            case "kubernetes:karpenter.sh/v1alpha1:NodeOverlayList":
                return new NodeOverlayList(name, <any>undefined, { urn })
            case "kubernetes:karpenter.sh/v1alpha1:NodeOverlayPatch":
                return new NodeOverlayPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("karpenter-aws", "karpenter.sh/v1alpha1", _module)
