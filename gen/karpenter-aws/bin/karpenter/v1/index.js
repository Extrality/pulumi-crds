"use strict";
// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodePoolPatch = exports.NodePoolList = exports.NodePool = exports.NodeClaimPatch = exports.NodeClaimList = exports.NodeClaim = exports.EC2NodeClassPatch = exports.EC2NodeClassList = exports.EC2NodeClass = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.EC2NodeClass = null;
utilities.lazyLoad(exports, ["EC2NodeClass"], () => require("./ec2nodeClass"));
exports.EC2NodeClassList = null;
utilities.lazyLoad(exports, ["EC2NodeClassList"], () => require("./ec2nodeClassList"));
exports.EC2NodeClassPatch = null;
utilities.lazyLoad(exports, ["EC2NodeClassPatch"], () => require("./ec2nodeClassPatch"));
exports.NodeClaim = null;
utilities.lazyLoad(exports, ["NodeClaim"], () => require("./nodeClaim"));
exports.NodeClaimList = null;
utilities.lazyLoad(exports, ["NodeClaimList"], () => require("./nodeClaimList"));
exports.NodeClaimPatch = null;
utilities.lazyLoad(exports, ["NodeClaimPatch"], () => require("./nodeClaimPatch"));
exports.NodePool = null;
utilities.lazyLoad(exports, ["NodePool"], () => require("./nodePool"));
exports.NodePoolList = null;
utilities.lazyLoad(exports, ["NodePoolList"], () => require("./nodePoolList"));
exports.NodePoolPatch = null;
utilities.lazyLoad(exports, ["NodePoolPatch"], () => require("./nodePoolPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:karpenter.k8s.aws/v1:EC2NodeClass":
                return new exports.EC2NodeClass(name, undefined, { urn });
            case "kubernetes:karpenter.k8s.aws/v1:EC2NodeClassList":
                return new exports.EC2NodeClassList(name, undefined, { urn });
            case "kubernetes:karpenter.k8s.aws/v1:EC2NodeClassPatch":
                return new exports.EC2NodeClassPatch(name, undefined, { urn });
            case "kubernetes:karpenter.sh/v1:NodeClaim":
                return new exports.NodeClaim(name, undefined, { urn });
            case "kubernetes:karpenter.sh/v1:NodeClaimList":
                return new exports.NodeClaimList(name, undefined, { urn });
            case "kubernetes:karpenter.sh/v1:NodeClaimPatch":
                return new exports.NodeClaimPatch(name, undefined, { urn });
            case "kubernetes:karpenter.sh/v1:NodePool":
                return new exports.NodePool(name, undefined, { urn });
            case "kubernetes:karpenter.sh/v1:NodePoolList":
                return new exports.NodePoolList(name, undefined, { urn });
            case "kubernetes:karpenter.sh/v1:NodePoolPatch":
                return new exports.NodePoolPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("karpenter-aws", "karpenter.k8s.aws/v1", _module);
pulumi.runtime.registerResourceModule("karpenter-aws", "karpenter.sh/v1", _module);
//# sourceMappingURL=index.js.map