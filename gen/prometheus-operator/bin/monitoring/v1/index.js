"use strict";
// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThanosRulerPatch = exports.ThanosRulerList = exports.ThanosRuler = exports.ServiceMonitorPatch = exports.ServiceMonitorList = exports.ServiceMonitor = exports.PrometheusRulePatch = exports.PrometheusRuleList = exports.PrometheusRule = exports.PrometheusPatch = exports.PrometheusList = exports.Prometheus = exports.ProbePatch = exports.ProbeList = exports.Probe = exports.PodMonitorPatch = exports.PodMonitorList = exports.PodMonitor = exports.AlertmanagerPatch = exports.AlertmanagerList = exports.Alertmanager = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.Alertmanager = null;
utilities.lazyLoad(exports, ["Alertmanager"], () => require("./alertmanager"));
exports.AlertmanagerList = null;
utilities.lazyLoad(exports, ["AlertmanagerList"], () => require("./alertmanagerList"));
exports.AlertmanagerPatch = null;
utilities.lazyLoad(exports, ["AlertmanagerPatch"], () => require("./alertmanagerPatch"));
exports.PodMonitor = null;
utilities.lazyLoad(exports, ["PodMonitor"], () => require("./podMonitor"));
exports.PodMonitorList = null;
utilities.lazyLoad(exports, ["PodMonitorList"], () => require("./podMonitorList"));
exports.PodMonitorPatch = null;
utilities.lazyLoad(exports, ["PodMonitorPatch"], () => require("./podMonitorPatch"));
exports.Probe = null;
utilities.lazyLoad(exports, ["Probe"], () => require("./probe"));
exports.ProbeList = null;
utilities.lazyLoad(exports, ["ProbeList"], () => require("./probeList"));
exports.ProbePatch = null;
utilities.lazyLoad(exports, ["ProbePatch"], () => require("./probePatch"));
exports.Prometheus = null;
utilities.lazyLoad(exports, ["Prometheus"], () => require("./prometheus"));
exports.PrometheusList = null;
utilities.lazyLoad(exports, ["PrometheusList"], () => require("./prometheusList"));
exports.PrometheusPatch = null;
utilities.lazyLoad(exports, ["PrometheusPatch"], () => require("./prometheusPatch"));
exports.PrometheusRule = null;
utilities.lazyLoad(exports, ["PrometheusRule"], () => require("./prometheusRule"));
exports.PrometheusRuleList = null;
utilities.lazyLoad(exports, ["PrometheusRuleList"], () => require("./prometheusRuleList"));
exports.PrometheusRulePatch = null;
utilities.lazyLoad(exports, ["PrometheusRulePatch"], () => require("./prometheusRulePatch"));
exports.ServiceMonitor = null;
utilities.lazyLoad(exports, ["ServiceMonitor"], () => require("./serviceMonitor"));
exports.ServiceMonitorList = null;
utilities.lazyLoad(exports, ["ServiceMonitorList"], () => require("./serviceMonitorList"));
exports.ServiceMonitorPatch = null;
utilities.lazyLoad(exports, ["ServiceMonitorPatch"], () => require("./serviceMonitorPatch"));
exports.ThanosRuler = null;
utilities.lazyLoad(exports, ["ThanosRuler"], () => require("./thanosRuler"));
exports.ThanosRulerList = null;
utilities.lazyLoad(exports, ["ThanosRulerList"], () => require("./thanosRulerList"));
exports.ThanosRulerPatch = null;
utilities.lazyLoad(exports, ["ThanosRulerPatch"], () => require("./thanosRulerPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:monitoring.coreos.com/v1:Alertmanager":
                return new exports.Alertmanager(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:AlertmanagerList":
                return new exports.AlertmanagerList(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:AlertmanagerPatch":
                return new exports.AlertmanagerPatch(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PodMonitor":
                return new exports.PodMonitor(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PodMonitorList":
                return new exports.PodMonitorList(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PodMonitorPatch":
                return new exports.PodMonitorPatch(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:Probe":
                return new exports.Probe(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ProbeList":
                return new exports.ProbeList(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ProbePatch":
                return new exports.ProbePatch(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:Prometheus":
                return new exports.Prometheus(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PrometheusList":
                return new exports.PrometheusList(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PrometheusPatch":
                return new exports.PrometheusPatch(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PrometheusRule":
                return new exports.PrometheusRule(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PrometheusRuleList":
                return new exports.PrometheusRuleList(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:PrometheusRulePatch":
                return new exports.PrometheusRulePatch(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ServiceMonitor":
                return new exports.ServiceMonitor(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ServiceMonitorList":
                return new exports.ServiceMonitorList(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ServiceMonitorPatch":
                return new exports.ServiceMonitorPatch(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ThanosRuler":
                return new exports.ThanosRuler(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ThanosRulerList":
                return new exports.ThanosRulerList(name, undefined, { urn });
            case "kubernetes:monitoring.coreos.com/v1:ThanosRulerPatch":
                return new exports.ThanosRulerPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("prometheus-operator", "monitoring.coreos.com/v1", _module);
//# sourceMappingURL=index.js.map