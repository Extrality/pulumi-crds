// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { SuperStreamArgs } from "./superStream";
export type SuperStream = import("./superStream").SuperStream;
export const SuperStream: typeof import("./superStream").SuperStream = null as any;
utilities.lazyLoad(exports, ["SuperStream"], () => require("./superStream"));

export { SuperStreamListArgs } from "./superStreamList";
export type SuperStreamList = import("./superStreamList").SuperStreamList;
export const SuperStreamList: typeof import("./superStreamList").SuperStreamList = null as any;
utilities.lazyLoad(exports, ["SuperStreamList"], () => require("./superStreamList"));

export { SuperStreamPatchArgs } from "./superStreamPatch";
export type SuperStreamPatch = import("./superStreamPatch").SuperStreamPatch;
export const SuperStreamPatch: typeof import("./superStreamPatch").SuperStreamPatch = null as any;
utilities.lazyLoad(exports, ["SuperStreamPatch"], () => require("./superStreamPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:rabbitmq.com/v1alpha1:SuperStream":
                return new SuperStream(name, <any>undefined, { urn })
            case "kubernetes:rabbitmq.com/v1alpha1:SuperStreamList":
                return new SuperStreamList(name, <any>undefined, { urn })
            case "kubernetes:rabbitmq.com/v1alpha1:SuperStreamPatch":
                return new SuperStreamPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("rabbitmq-topology-operator", "rabbitmq.com/v1alpha1", _module)
