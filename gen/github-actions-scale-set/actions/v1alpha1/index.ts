// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AutoscalingListenerArgs } from "./autoscalingListener";
export type AutoscalingListener = import("./autoscalingListener").AutoscalingListener;
export const AutoscalingListener: typeof import("./autoscalingListener").AutoscalingListener = null as any;
utilities.lazyLoad(exports, ["AutoscalingListener"], () => require("./autoscalingListener"));

export { AutoscalingListenerListArgs } from "./autoscalingListenerList";
export type AutoscalingListenerList = import("./autoscalingListenerList").AutoscalingListenerList;
export const AutoscalingListenerList: typeof import("./autoscalingListenerList").AutoscalingListenerList = null as any;
utilities.lazyLoad(exports, ["AutoscalingListenerList"], () => require("./autoscalingListenerList"));

export { AutoscalingListenerPatchArgs } from "./autoscalingListenerPatch";
export type AutoscalingListenerPatch = import("./autoscalingListenerPatch").AutoscalingListenerPatch;
export const AutoscalingListenerPatch: typeof import("./autoscalingListenerPatch").AutoscalingListenerPatch = null as any;
utilities.lazyLoad(exports, ["AutoscalingListenerPatch"], () => require("./autoscalingListenerPatch"));

export { AutoscalingRunnerSetArgs } from "./autoscalingRunnerSet";
export type AutoscalingRunnerSet = import("./autoscalingRunnerSet").AutoscalingRunnerSet;
export const AutoscalingRunnerSet: typeof import("./autoscalingRunnerSet").AutoscalingRunnerSet = null as any;
utilities.lazyLoad(exports, ["AutoscalingRunnerSet"], () => require("./autoscalingRunnerSet"));

export { AutoscalingRunnerSetListArgs } from "./autoscalingRunnerSetList";
export type AutoscalingRunnerSetList = import("./autoscalingRunnerSetList").AutoscalingRunnerSetList;
export const AutoscalingRunnerSetList: typeof import("./autoscalingRunnerSetList").AutoscalingRunnerSetList = null as any;
utilities.lazyLoad(exports, ["AutoscalingRunnerSetList"], () => require("./autoscalingRunnerSetList"));

export { AutoscalingRunnerSetPatchArgs } from "./autoscalingRunnerSetPatch";
export type AutoscalingRunnerSetPatch = import("./autoscalingRunnerSetPatch").AutoscalingRunnerSetPatch;
export const AutoscalingRunnerSetPatch: typeof import("./autoscalingRunnerSetPatch").AutoscalingRunnerSetPatch = null as any;
utilities.lazyLoad(exports, ["AutoscalingRunnerSetPatch"], () => require("./autoscalingRunnerSetPatch"));

export { EphemeralRunnerArgs } from "./ephemeralRunner";
export type EphemeralRunner = import("./ephemeralRunner").EphemeralRunner;
export const EphemeralRunner: typeof import("./ephemeralRunner").EphemeralRunner = null as any;
utilities.lazyLoad(exports, ["EphemeralRunner"], () => require("./ephemeralRunner"));

export { EphemeralRunnerListArgs } from "./ephemeralRunnerList";
export type EphemeralRunnerList = import("./ephemeralRunnerList").EphemeralRunnerList;
export const EphemeralRunnerList: typeof import("./ephemeralRunnerList").EphemeralRunnerList = null as any;
utilities.lazyLoad(exports, ["EphemeralRunnerList"], () => require("./ephemeralRunnerList"));

export { EphemeralRunnerPatchArgs } from "./ephemeralRunnerPatch";
export type EphemeralRunnerPatch = import("./ephemeralRunnerPatch").EphemeralRunnerPatch;
export const EphemeralRunnerPatch: typeof import("./ephemeralRunnerPatch").EphemeralRunnerPatch = null as any;
utilities.lazyLoad(exports, ["EphemeralRunnerPatch"], () => require("./ephemeralRunnerPatch"));

export { EphemeralRunnerSetArgs } from "./ephemeralRunnerSet";
export type EphemeralRunnerSet = import("./ephemeralRunnerSet").EphemeralRunnerSet;
export const EphemeralRunnerSet: typeof import("./ephemeralRunnerSet").EphemeralRunnerSet = null as any;
utilities.lazyLoad(exports, ["EphemeralRunnerSet"], () => require("./ephemeralRunnerSet"));

export { EphemeralRunnerSetListArgs } from "./ephemeralRunnerSetList";
export type EphemeralRunnerSetList = import("./ephemeralRunnerSetList").EphemeralRunnerSetList;
export const EphemeralRunnerSetList: typeof import("./ephemeralRunnerSetList").EphemeralRunnerSetList = null as any;
utilities.lazyLoad(exports, ["EphemeralRunnerSetList"], () => require("./ephemeralRunnerSetList"));

export { EphemeralRunnerSetPatchArgs } from "./ephemeralRunnerSetPatch";
export type EphemeralRunnerSetPatch = import("./ephemeralRunnerSetPatch").EphemeralRunnerSetPatch;
export const EphemeralRunnerSetPatch: typeof import("./ephemeralRunnerSetPatch").EphemeralRunnerSetPatch = null as any;
utilities.lazyLoad(exports, ["EphemeralRunnerSetPatch"], () => require("./ephemeralRunnerSetPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:actions.github.com/v1alpha1:AutoscalingListener":
                return new AutoscalingListener(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:AutoscalingListenerList":
                return new AutoscalingListenerList(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:AutoscalingListenerPatch":
                return new AutoscalingListenerPatch(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:AutoscalingRunnerSet":
                return new AutoscalingRunnerSet(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:AutoscalingRunnerSetList":
                return new AutoscalingRunnerSetList(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:AutoscalingRunnerSetPatch":
                return new AutoscalingRunnerSetPatch(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:EphemeralRunner":
                return new EphemeralRunner(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:EphemeralRunnerList":
                return new EphemeralRunnerList(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:EphemeralRunnerPatch":
                return new EphemeralRunnerPatch(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:EphemeralRunnerSet":
                return new EphemeralRunnerSet(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:EphemeralRunnerSetList":
                return new EphemeralRunnerSetList(name, <any>undefined, { urn })
            case "kubernetes:actions.github.com/v1alpha1:EphemeralRunnerSetPatch":
                return new EphemeralRunnerSetPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("github-actions-scale-set", "actions.github.com/v1alpha1", _module)
